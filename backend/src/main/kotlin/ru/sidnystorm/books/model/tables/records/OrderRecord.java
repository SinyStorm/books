/*
 * This file is generated by jOOQ.
 */
package ru.sidnystorm.books.model.tables.records;


import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;
import ru.sidnystorm.books.model.tables.Order;

import javax.annotation.Generated;
import java.sql.Date;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OrderRecord extends UpdatableRecordImpl<OrderRecord> implements Record5<Integer, Integer, Date, Integer, Boolean> {

    private static final long serialVersionUID = -62657722;

    /**
     * Setter for <code>public.order.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.order.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.order.user</code>.
     */
    public void setUser(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.order.user</code>.
     */
    public Integer getUser() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>public.order.date</code>.
     */
    public void setDate(Date value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.order.date</code>.
     */
    public Date getDate() {
        return (Date) get(2);
    }

    /**
     * Setter for <code>public.order.publisher</code>.
     */
    public void setPublisher(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.order.publisher</code>.
     */
    public Integer getPublisher() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>public.order.formed</code>.
     */
    public void setFormed(Boolean value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.order.formed</code>.
     */
    public Boolean getFormed() {
        return (Boolean) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<Integer, Integer, Date, Integer, Boolean> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<Integer, Integer, Date, Integer, Boolean> valuesRow() {
        return (Row5) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Order.ORDER.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return Order.ORDER.USER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Date> field3() {
        return Order.ORDER.DATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field4() {
        return Order.ORDER.PUBLISHER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Boolean> field5() {
        return Order.ORDER.FORMED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component2() {
        return getUser();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Date component3() {
        return getDate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component4() {
        return getPublisher();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean component5() {
        return getFormed();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getUser();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Date value3() {
        return getDate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value4() {
        return getPublisher();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean value5() {
        return getFormed();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrderRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrderRecord value2(Integer value) {
        setUser(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrderRecord value3(Date value) {
        setDate(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrderRecord value4(Integer value) {
        setPublisher(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrderRecord value5(Boolean value) {
        setFormed(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrderRecord values(Integer value1, Integer value2, Date value3, Integer value4, Boolean value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached OrderRecord
     */
    public OrderRecord() {
        super(Order.ORDER);
    }

    /**
     * Create a detached, initialised OrderRecord
     */
    public OrderRecord(Integer id, Integer user, Date date, Integer publisher, Boolean formed) {
        super(Order.ORDER);

        set(0, id);
        set(1, user);
        set(2, date);
        set(3, publisher);
        set(4, formed);
    }
}
